; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

; Inno Download Plugin
#include "inno-download-plugin\idp.iss"

#define AppName "OpenChart"
#define AppVersion "0.1.0"
#define AppPublisher "OpenChartProject"
#define AppURL "https://openchart.io"
#define AppExeName "OpenChart.exe"
#define GtkDownloadURL "https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2020-05-19/gtk3-runtime-3.24.18-2020-05-19-ts-win64.exe"
#define GtkDownloadDest "{tmp}\gtk-3.24.18.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A5E1DCB8-97DF-4F0D-BA2F-6AF2DE4DB870}
AppName={#AppName}
AppVersion={#AppVersion}
AppVerName={#AppName} v{#AppVersion}
AppPublisher={#AppPublisher}
AppPublisherURL={#AppURL}
AppSupportURL={#AppURL}
AppUpdatesURL={#AppURL}
DefaultDirName={autopf}\{#AppName}
DisableDirPage=no
DisableProgramGroupPage=yes
OutputBaseFilename=install-{#AppName}
Compression=lzma
SolidCompression=yes
WizardStyle=modern
WizardSmallImageFile=setup-icon.bmp
UninstallDisplayName=uninstall

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "win-x64\OpenChart.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "win-x64\*.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "win-x64\icons\*"; DestDir: "{app}\icons"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "win-x64\noteskins\*"; DestDir: "{app}\noteskins"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#AppName}"; Filename: "{app}\{#AppExeName}"; IconFilename: "{app}\icons\AppIcon.ico"
Name: "{autodesktop}\{#AppName}"; Filename: "{app}\{#AppExeName}"; IconFilename: "{app}\icons\AppIcon.ico"; Tasks: desktopicon

[Run]
Filename: "{app}\{#AppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(AppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]

var
  InstallGtk: Boolean;
  InstallGtkPage: TOutputMsgMemoWizardPage;

const
  NewLine = #13#10;

procedure InitializeWizard();
begin
  InstallGtk := False;

  if (not RegKeyExists(HKLM32, 'SOFTWARE\GTK\3.0')) and (not RegKeyExists(HKLM64, 'SOFTWARE\GTK\3.0')) then
  begin
    idpAddFile('{#GtkDownloadURL}', ExpandConstant('{#GtkDownloadDest}'));
    idpDownloadAfter(wpReady);
    InstallGtk := True;
    InstallGtkPage := CreateOutputMsgMemoPage(wpInstalling, 'Installing Dependencies...', '', 'Some additional dependencies need to be installed.', '');
  end;
end;

procedure CurPageChanged(CurPageID: Integer);
var
  ResultCode: Integer;
  Text: String;
begin
  if InstallGtk and (CurPageID = InstallGtkPage.ID) then
  begin
    Text := 'Installing Gtk. Please be patient, as this can take a minute...';
    InstallGtkPage.RichEditViewer.RTFText := Text;

    if Exec(ExpandConstant('{#GtkDownloadDest}'), '/S', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
    begin
      Text := Text + NewLine + 'Gtk was installed successfully.';
      InstallGtkPage.RichEditViewer.RTFText := Text;
    end
    else begin
      Text := Text + NewLine + 'An error occurred while installing Gtk (code = ' + IntToStr(ResultCode) + ')';
      InstallGtkPage.RichEditViewer.RTFText := Text;
    end;
  end;
end;
